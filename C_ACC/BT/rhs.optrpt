Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.8.0 Build 20221119_000000

Compiler options: -I../common -c -g -Wall -O3 -parallel -qopt-report=5

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: compute_rhs()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (compute_rhs()) [1/1=100.0%] rhs.c(5,1)
  -> EXTERN: (9,16) timer_start(int)
  -> EXTERN: (53,16) timer_start(int)
  -> EXTERN: (162,16) timer_stop(int)
  -> EXTERN: (164,16) timer_start(int)
  -> EXTERN: (272,16) timer_stop(int)
  -> EXTERN: (274,16) timer_start(int)
  -> EXTERN: (403,16) timer_stop(int)
  -> EXTERN: (419,16) timer_stop(int)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at rhs.c(18,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j i rho_inv k } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(19,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(20,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(20,7)
         remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(22,9) ]
         remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(23,9) ]
         remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(24,9) ]
         remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(25,9) ]
         remark #15388: vectorization support: reference square[k][j][i] has aligned access   [ rhs.c(26,9) ]
         remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(30,9) ]
         remark #15388: vectorization support: reference square[k][j][i] has aligned access   [ rhs.c(30,23) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(21,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(23,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(24,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(25,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(27,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(27,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(28,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(28,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(29,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(29,27) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.272
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15451: unmasked unaligned unit stride stores: 5 
         remark #15452: unmasked strided loads: 10 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 80 
         remark #15477: vector cost: 57.000 
         remark #15478: estimated potential speedup: 1.380 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at rhs.c(20,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(42,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 21125   [ rhs.c(46,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][m]>, stride is 21125   [ rhs.c(46,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 4 
   remark #15477: vector cost: 5.500 
   remark #15478: estimated potential speedup: 0.720 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(43,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(46,11) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][m]>, stride is 325   [ rhs.c(46,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 4 
      remark #15477: vector cost: 5.000 
      remark #15478: estimated potential speedup: 0.800 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(44,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 5   [ rhs.c(46,11) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][m]>, stride is 5   [ rhs.c(46,29) ]
         remark #15305: vectorization support: vector length 2
         remark #15452: unmasked strided loads: 1 
         remark #15453: unmasked strided stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 4 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.890 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at rhs.c(45,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference rhs[k][j][i][m] has unaligned access   [ rhs.c(46,11) ]
            remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ rhs.c(46,29) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.500
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 3.000 
            remark #15478: estimated potential speedup: 0.900 
            remark #15488: --- end vector cost summary ---
            remark #25436: completely unrolled by 5  
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(60,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ m m j j i m m m j j i uijk up1 um1 i tx2 dx1tx1 c2 dx2tx1 con43 xxcon2 dx3tx1 dx4tx1 c1 xxcon5 xxcon3 dx5tx1 xxcon4 dssp i k } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(61,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(62,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(62,7)
         remark #25427: Loop Statements Reordered
         remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(63,16) ]
         remark #15389: vectorization support: reference us[k][j][i+1] has unaligned access   [ rhs.c(64,16) ]
         remark #15389: vectorization support: reference us[k][j][i-1] has unaligned access   [ rhs.c(65,16) ]
         remark #15388: vectorization support: reference square[k][j][i+1] has aligned access   [ rhs.c(78,33) ]
         remark #15388: vectorization support: reference square[k][j][i-1] has aligned access   [ rhs.c(79,33) ]
         remark #15389: vectorization support: reference vs[k][j][i+1] has unaligned access   [ rhs.c(85,21) ]
         remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(85,41) ]
         remark #15389: vectorization support: reference vs[k][j][i-1] has unaligned access   [ rhs.c(86,15) ]
         remark #15389: vectorization support: reference ws[k][j][i+1] has unaligned access   [ rhs.c(93,21) ]
         remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(93,41) ]
         remark #15389: vectorization support: reference ws[k][j][i-1] has unaligned access   [ rhs.c(94,15) ]
         remark #15389: vectorization support: reference qs[k][j][i+1] has unaligned access   [ rhs.c(101,21) ]
         remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(101,41) ]
         remark #15389: vectorization support: reference qs[k][j][i-1] has unaligned access   [ rhs.c(102,15) ]
         remark #15389: vectorization support: reference rho_i[k][j][i+1] has unaligned access   [ rhs.c(105,37) ]
         remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(106,33) ]
         remark #15389: vectorization support: reference rho_i[k][j][i-1] has unaligned access   [ rhs.c(107,31) ]
         remark #15388: vectorization support: reference square[k][j][i+1] has aligned access   [ rhs.c(109,20) ]
         remark #15388: vectorization support: reference square[k][j][i-1] has aligned access   [ rhs.c(111,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(67,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(67,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][0]>, stride is 5   [ rhs.c(68,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(68,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][0]>, stride is 5   [ rhs.c(69,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][1]>, stride is 5   [ rhs.c(70,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][1]>, stride is 5   [ rhs.c(70,36) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(72,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(72,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][1]>, stride is 5   [ rhs.c(73,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(73,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][1]>, stride is 5   [ rhs.c(74,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][1]>, stride is 5   [ rhs.c(76,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][1]>, stride is 5   [ rhs.c(77,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(78,16) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(79,16) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(82,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(82,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][2]>, stride is 5   [ rhs.c(83,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(83,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][2]>, stride is 5   [ rhs.c(84,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][2]>, stride is 5   [ rhs.c(87,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][2]>, stride is 5   [ rhs.c(88,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(90,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(90,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][3]>, stride is 5   [ rhs.c(91,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(91,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][3]>, stride is 5   [ rhs.c(92,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][3]>, stride is 5   [ rhs.c(95,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][3]>, stride is 5   [ rhs.c(96,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(98,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(98,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(99,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(99,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(100,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(105,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(106,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(107,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(108,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(110,19) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.324
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 15 
         remark #15452: unmasked strided loads: 35 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 273 
         remark #15477: vector cost: 179.000 
         remark #15478: estimated potential speedup: 1.490 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at rhs.c(62,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(118,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.046
      remark #15452: unmasked strided loads: 45 
      remark #15453: unmasked strided stores: 10 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 216 
      remark #15477: vector cost: 217.500 
      remark #15478: estimated potential speedup: 0.990 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(120,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at rhs.c(127,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(134,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(135,7)
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at rhs.c(136,9)
         <Peeled loop for vectorization>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at rhs.c(136,9)
            remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(137,11) ]
            remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(137,29) ]
            remark #15388: vectorization support: reference u[k][j][i-2][m] has aligned access   [ rhs.c(138,16) ]
            remark #15389: vectorization support: reference u[k][j][i-1][m] has unaligned access   [ rhs.c(138,38) ]
            remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(139,20) ]
            remark #15389: vectorization support: reference u[k][j][i+1][m] has unaligned access   [ rhs.c(139,40) ]
            remark #15388: vectorization support: reference u[k][j][i+2][m] has aligned access   [ rhs.c(140,16) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.296
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 4 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 27 
            remark #15477: vector cost: 13.500 
            remark #15478: estimated potential speedup: 1.390 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at rhs.c(136,9)
         <Alternate Alignment Vectorized Loop>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at rhs.c(136,9)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=5
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(145,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.046
      remark #15452: unmasked strided loads: 45 
      remark #15453: unmasked strided stores: 10 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 216 
      remark #15477: vector cost: 217.500 
      remark #15478: estimated potential speedup: 0.990 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(147,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END

      LOOP BEGIN at rhs.c(154,7)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(171,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[k][j][i][0] (177:9) and rhs[k][j][i][m] (245:11)
   remark #17106: parallel dependence: assumed OUTPUT dependence between rhs[k][j][i][m] (245:11) and rhs[k][j][i][0] (177:9)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(172,5)
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ i vijk vp1 vm1 ty2 dy1ty1 yycon2 dy2ty1 c2 dy3ty1 con43 dy4ty1 c1 yycon5 yycon3 dy5ty1 yycon4 j k } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(173,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(173,7)
         remark #25427: Loop Statements Reordered
         remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(174,16) ]
         remark #15389: vectorization support: reference vs[k][j+1][i] has unaligned access   [ rhs.c(175,16) ]
         remark #15389: vectorization support: reference vs[k][j-1][i] has unaligned access   [ rhs.c(176,16) ]
         remark #15389: vectorization support: reference us[k][j+1][i] has unaligned access   [ rhs.c(184,21) ]
         remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(184,41) ]
         remark #15389: vectorization support: reference us[k][j-1][i] has unaligned access   [ rhs.c(185,15) ]
         remark #15388: vectorization support: reference square[k][j+1][i] has aligned access   [ rhs.c(194,34) ]
         remark #15388: vectorization support: reference square[k][j-1][i] has aligned access   [ rhs.c(195,34) ]
         remark #15389: vectorization support: reference ws[k][j+1][i] has unaligned access   [ rhs.c(200,21) ]
         remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(200,41) ]
         remark #15389: vectorization support: reference ws[k][j-1][i] has unaligned access   [ rhs.c(201,15) ]
         remark #15389: vectorization support: reference qs[k][j+1][i] has unaligned access   [ rhs.c(207,21) ]
         remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(207,41) ]
         remark #15389: vectorization support: reference qs[k][j-1][i] has unaligned access   [ rhs.c(208,15) ]
         remark #15389: vectorization support: reference rho_i[k][j+1][i] has unaligned access   [ rhs.c(211,37) ]
         remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(212,33) ]
         remark #15389: vectorization support: reference rho_i[k][j-1][i] has unaligned access   [ rhs.c(213,31) ]
         remark #15388: vectorization support: reference square[k][j+1][i] has aligned access   [ rhs.c(215,20) ]
         remark #15388: vectorization support: reference square[k][j-1][i] has aligned access   [ rhs.c(217,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(177,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(177,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][0]>, stride is 5   [ rhs.c(178,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(178,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][0]>, stride is 5   [ rhs.c(179,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][2]>, stride is 5   [ rhs.c(180,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][2]>, stride is 5   [ rhs.c(180,36) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(181,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(181,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][1]>, stride is 5   [ rhs.c(182,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(182,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][1]>, stride is 5   [ rhs.c(183,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][1]>, stride is 5   [ rhs.c(186,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][1]>, stride is 5   [ rhs.c(187,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(188,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(188,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][2]>, stride is 5   [ rhs.c(189,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(189,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][2]>, stride is 5   [ rhs.c(190,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][2]>, stride is 5   [ rhs.c(192,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][2]>, stride is 5   [ rhs.c(193,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(194,16) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(195,16) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(197,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(197,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][3]>, stride is 5   [ rhs.c(198,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(198,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][3]>, stride is 5   [ rhs.c(199,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][3]>, stride is 5   [ rhs.c(202,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][3]>, stride is 5   [ rhs.c(203,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(204,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(204,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(205,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(205,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(206,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(211,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(212,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(213,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(214,22) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(216,19) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.324
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 15 
         remark #15452: unmasked strided loads: 35 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 273 
         remark #15477: vector cost: 179.000 
         remark #15478: estimated potential speedup: 1.490 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at rhs.c(173,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(225,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(226,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(226,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference rhs[k][1][i][m] has aligned access   [ rhs.c(227,9) ]
         remark #15388: vectorization support: reference rhs[k][1][i][m] has aligned access   [ rhs.c(227,27) ]
         remark #15388: vectorization support: reference u[k][1][i][m] has aligned access   [ rhs.c(228,17) ]
         remark #15389: vectorization support: reference u[k][2][i][m] has unaligned access   [ rhs.c(228,37) ]
         remark #15388: vectorization support: reference u[k][3][i][m] has aligned access   [ rhs.c(229,13) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.421
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 19 
         remark #15477: vector cost: 9.500 
         remark #15478: estimated potential speedup: 1.300 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(226,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(226,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(234,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(235,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(235,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference rhs[k][2][i][m] has aligned access   [ rhs.c(236,9) ]
         remark #15388: vectorization support: reference rhs[k][2][i][m] has aligned access   [ rhs.c(236,27) ]
         remark #15388: vectorization support: reference u[k][1][i][m] has aligned access   [ rhs.c(237,17) ]
         remark #15389: vectorization support: reference u[k][2][i][m] has unaligned access   [ rhs.c(237,39) ]
         remark #15388: vectorization support: reference u[k][3][i][m] has aligned access   [ rhs.c(238,16) ]
         remark #15389: vectorization support: reference u[k][4][i][m] has unaligned access   [ rhs.c(238,34) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.320
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 12.500 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(235,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(235,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(242,5)
      remark #17109: LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ i m dssp j k } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(243,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(243,7)
         remark #25420: Collapsed with loop at line 244 
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(245,11) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(245,29) ]
         remark #15388: vectorization support: reference u[k][j-2][i][m] has aligned access   [ rhs.c(246,16) ]
         remark #15389: vectorization support: reference u[k][j-1][i][m] has unaligned access   [ rhs.c(246,38) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(247,20) ]
         remark #15389: vectorization support: reference u[k][j+1][i][m] has unaligned access   [ rhs.c(247,40) ]
         remark #15388: vectorization support: reference u[k][j+2][i][m] has aligned access   [ rhs.c(248,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.296
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 27 
         remark #15477: vector cost: 13.500 
         remark #15478: estimated potential speedup: 1.390 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1

         LOOP BEGIN at rhs.c(244,9)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at rhs.c(243,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(243,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(254,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(255,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(255,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(256,9) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(256,27) ]
         remark #15388: vectorization support: reference u[k][j-2][i][m] has aligned access   [ rhs.c(257,13) ]
         remark #15389: vectorization support: reference u[k][j-1][i][m] has unaligned access   [ rhs.c(257,35) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(258,17) ]
         remark #15389: vectorization support: reference u[k][j+1][i][m] has unaligned access   [ rhs.c(258,37) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.320
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 12.500 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(255,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(255,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(263,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(264,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(264,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(265,9) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(265,27) ]
         remark #15388: vectorization support: reference u[k][j-2][i][m] has aligned access   [ rhs.c(266,13) ]
         remark #15389: vectorization support: reference u[k][j-1][i][m] has unaligned access   [ rhs.c(266,34) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(267,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.421
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 19 
         remark #15477: vector cost: 9.500 
         remark #15478: estimated potential speedup: 1.300 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(264,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(264,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(281,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j i wijk wp1 wm1 tz2 dz1tz1 zzcon2 dz2tz1 dz3tz1 c2 dz4tz1 con43 c1 zzcon5 zzcon3 dz5tz1 zzcon4 k } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(282,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(283,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(283,7)
         remark #25427: Loop Statements Reordered
         remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(284,16) ]
         remark #15389: vectorization support: reference ws[k+1][j][i] has unaligned access   [ rhs.c(285,16) ]
         remark #15389: vectorization support: reference ws[k-1][j][i] has unaligned access   [ rhs.c(286,16) ]
         remark #15389: vectorization support: reference us[k+1][j][i] has unaligned access   [ rhs.c(295,21) ]
         remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(295,41) ]
         remark #15389: vectorization support: reference us[k-1][j][i] has unaligned access   [ rhs.c(296,15) ]
         remark #15389: vectorization support: reference vs[k+1][j][i] has unaligned access   [ rhs.c(302,21) ]
         remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(302,41) ]
         remark #15389: vectorization support: reference vs[k-1][j][i] has unaligned access   [ rhs.c(303,15) ]
         remark #15388: vectorization support: reference square[k+1][j][i] has aligned access   [ rhs.c(312,34) ]
         remark #15388: vectorization support: reference square[k-1][j][i] has aligned access   [ rhs.c(313,34) ]
         remark #15389: vectorization support: reference qs[k+1][j][i] has unaligned access   [ rhs.c(318,21) ]
         remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(318,41) ]
         remark #15389: vectorization support: reference qs[k-1][j][i] has unaligned access   [ rhs.c(319,15) ]
         remark #15389: vectorization support: reference rho_i[k+1][j][i] has unaligned access   [ rhs.c(322,37) ]
         remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(323,33) ]
         remark #15389: vectorization support: reference rho_i[k-1][j][i] has unaligned access   [ rhs.c(324,31) ]
         remark #15388: vectorization support: reference square[k+1][j][i] has aligned access   [ rhs.c(326,20) ]
         remark #15388: vectorization support: reference square[k-1][j][i] has aligned access   [ rhs.c(328,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(288,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(288,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][0]>, stride is 5   [ rhs.c(289,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(289,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][0]>, stride is 5   [ rhs.c(290,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][3]>, stride is 5   [ rhs.c(291,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][3]>, stride is 5   [ rhs.c(291,36) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(292,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(292,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][1]>, stride is 5   [ rhs.c(293,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(293,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][1]>, stride is 5   [ rhs.c(294,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][1]>, stride is 5   [ rhs.c(297,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][1]>, stride is 5   [ rhs.c(298,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(299,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(299,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][2]>, stride is 5   [ rhs.c(300,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(300,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][2]>, stride is 5   [ rhs.c(301,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][2]>, stride is 5   [ rhs.c(304,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][2]>, stride is 5   [ rhs.c(305,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(306,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(306,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][3]>, stride is 5   [ rhs.c(307,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(307,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][3]>, stride is 5   [ rhs.c(308,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][3]>, stride is 5   [ rhs.c(310,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][3]>, stride is 5   [ rhs.c(311,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(312,16) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(313,16) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(315,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(315,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(316,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(316,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(317,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(322,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(323,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(324,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(325,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(327,19) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.324
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 15 
         remark #15452: unmasked strided loads: 35 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 273 
         remark #15477: vector cost: 179.000 
         remark #15478: estimated potential speedup: 1.490 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at rhs.c(283,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(339,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ i m dssp j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(340,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(341,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(341,7)
         remark #15388: vectorization support: reference rhs[1][j][i][m] has aligned access   [ rhs.c(342,9) ]
         remark #15388: vectorization support: reference rhs[1][j][i][m] has aligned access   [ rhs.c(342,27) ]
         remark #15388: vectorization support: reference u[1][j][i][m] has aligned access   [ rhs.c(343,17) ]
         remark #15389: vectorization support: reference u[2][j][i][m] has unaligned access   [ rhs.c(343,37) ]
         remark #15388: vectorization support: reference u[3][j][i][m] has aligned access   [ rhs.c(344,13) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.421
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 19 
         remark #15477: vector cost: 9.500 
         remark #15478: estimated potential speedup: 1.300 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(341,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(341,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(352,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ i m dssp j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(353,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(354,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(354,7)
         remark #15388: vectorization support: reference rhs[2][j][i][m] has aligned access   [ rhs.c(355,9) ]
         remark #15388: vectorization support: reference rhs[2][j][i][m] has aligned access   [ rhs.c(355,27) ]
         remark #15388: vectorization support: reference u[1][j][i][m] has aligned access   [ rhs.c(356,17) ]
         remark #15389: vectorization support: reference u[2][j][i][m] has unaligned access   [ rhs.c(356,39) ]
         remark #15388: vectorization support: reference u[3][j][i][m] has aligned access   [ rhs.c(357,16) ]
         remark #15389: vectorization support: reference u[4][j][i][m] has unaligned access   [ rhs.c(357,34) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.320
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 12.500 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(354,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(354,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(364,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j i m dssp k } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(365,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(366,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(366,7)
         remark #25420: Collapsed with loop at line 367 
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(368,11) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(368,29) ]
         remark #15388: vectorization support: reference u[k-2][j][i][m] has aligned access   [ rhs.c(369,16) ]
         remark #15389: vectorization support: reference u[k-1][j][i][m] has unaligned access   [ rhs.c(369,38) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(370,20) ]
         remark #15389: vectorization support: reference u[k+1][j][i][m] has unaligned access   [ rhs.c(370,40) ]
         remark #15388: vectorization support: reference u[k+2][j][i][m] has aligned access   [ rhs.c(371,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.296
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 27 
         remark #15477: vector cost: 13.500 
         remark #15478: estimated potential speedup: 1.390 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1

         LOOP BEGIN at rhs.c(367,9)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at rhs.c(366,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(366,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(380,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ i m k dssp j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(381,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(382,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(382,7)
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(383,9) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(383,27) ]
         remark #15388: vectorization support: reference u[k-2][j][i][m] has aligned access   [ rhs.c(384,13) ]
         remark #15389: vectorization support: reference u[k-1][j][i][m] has unaligned access   [ rhs.c(384,35) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(385,17) ]
         remark #15389: vectorization support: reference u[k+1][j][i][m] has unaligned access   [ rhs.c(385,37) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.320
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 12.500 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(382,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(382,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(393,3)
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ i m k dssp j } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(394,5)
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(395,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(395,7)
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(396,9) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(396,27) ]
         remark #15388: vectorization support: reference u[k-2][j][i][m] has aligned access   [ rhs.c(397,13) ]
         remark #15389: vectorization support: reference u[k-1][j][i][m] has unaligned access   [ rhs.c(397,34) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(398,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.421
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 19 
         remark #15477: vector cost: 9.500 
         remark #15478: estimated potential speedup: 1.300 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(395,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(395,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(409,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17109: LOOP WAS AUTO-PARALLELIZED
   remark #17101: parallel loop shared={ .2 } private={ } firstprivate={ j i m dt k } lastprivate={ } firstlastprivate={ } reduction={ }
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 21125   [ rhs.c(413,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 21125   [ rhs.c(413,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.154
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 6.500 
   remark #15478: estimated potential speedup: 0.910 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(410,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(413,11) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(413,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.167
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 6.000 
      remark #15478: estimated potential speedup: 0.990 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(411,7)
         remark #25420: Collapsed with loop at line 412 
         remark #15389: vectorization support: reference rhs[k][j][i][m] has unaligned access   [ rhs.c(413,11) ]
         remark #15389: vectorization support: reference rhs[k][j][i][m] has unaligned access   [ rhs.c(413,29) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.444
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 6 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.930 
         remark #15488: --- end vector cost summary ---
         remark #25439: unrolled with remainder by 8  
         remark #25015: Estimate of max trip count of loop=5

         LOOP BEGIN at rhs.c(412,9)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at rhs.c(411,7)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(18,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(19,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(20,7)
      <Peeled loop for vectorization>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(20,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(22,9) ]
         remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(23,9) ]
         remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(24,9) ]
         remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(25,9) ]
         remark #15388: vectorization support: reference square[k][j][i] has aligned access   [ rhs.c(26,9) ]
         remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(30,9) ]
         remark #15388: vectorization support: reference square[k][j][i] has aligned access   [ rhs.c(30,23) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(21,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(23,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(24,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(25,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(27,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(27,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(28,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(28,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(29,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(29,27) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.272
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15451: unmasked unaligned unit stride stores: 5 
         remark #15452: unmasked strided loads: 10 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 80 
         remark #15477: vector cost: 57.000 
         remark #15478: estimated potential speedup: 1.380 
         remark #15486: divides: 1 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at rhs.c(20,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(60,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(61,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(62,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(62,7)
         remark #17107: loop was not parallelized: inner loop
         remark #25427: Loop Statements Reordered
         remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(63,16) ]
         remark #15389: vectorization support: reference us[k][j][i+1] has unaligned access   [ rhs.c(64,16) ]
         remark #15389: vectorization support: reference us[k][j][i-1] has unaligned access   [ rhs.c(65,16) ]
         remark #15388: vectorization support: reference square[k][j][i+1] has aligned access   [ rhs.c(78,33) ]
         remark #15388: vectorization support: reference square[k][j][i-1] has aligned access   [ rhs.c(79,33) ]
         remark #15389: vectorization support: reference vs[k][j][i+1] has unaligned access   [ rhs.c(85,21) ]
         remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(85,41) ]
         remark #15389: vectorization support: reference vs[k][j][i-1] has unaligned access   [ rhs.c(86,15) ]
         remark #15389: vectorization support: reference ws[k][j][i+1] has unaligned access   [ rhs.c(93,21) ]
         remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(93,41) ]
         remark #15389: vectorization support: reference ws[k][j][i-1] has unaligned access   [ rhs.c(94,15) ]
         remark #15389: vectorization support: reference qs[k][j][i+1] has unaligned access   [ rhs.c(101,21) ]
         remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(101,41) ]
         remark #15389: vectorization support: reference qs[k][j][i-1] has unaligned access   [ rhs.c(102,15) ]
         remark #15389: vectorization support: reference rho_i[k][j][i+1] has unaligned access   [ rhs.c(105,37) ]
         remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(106,33) ]
         remark #15389: vectorization support: reference rho_i[k][j][i-1] has unaligned access   [ rhs.c(107,31) ]
         remark #15388: vectorization support: reference square[k][j][i+1] has aligned access   [ rhs.c(109,20) ]
         remark #15388: vectorization support: reference square[k][j][i-1] has aligned access   [ rhs.c(111,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(67,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(67,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][0]>, stride is 5   [ rhs.c(68,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(68,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][0]>, stride is 5   [ rhs.c(69,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][1]>, stride is 5   [ rhs.c(70,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][1]>, stride is 5   [ rhs.c(70,36) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(72,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(72,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][1]>, stride is 5   [ rhs.c(73,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(73,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][1]>, stride is 5   [ rhs.c(74,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][1]>, stride is 5   [ rhs.c(76,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][1]>, stride is 5   [ rhs.c(77,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(78,16) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(79,16) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(82,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(82,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][2]>, stride is 5   [ rhs.c(83,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(83,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][2]>, stride is 5   [ rhs.c(84,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][2]>, stride is 5   [ rhs.c(87,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][2]>, stride is 5   [ rhs.c(88,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(90,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(90,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][3]>, stride is 5   [ rhs.c(91,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(91,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][3]>, stride is 5   [ rhs.c(92,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][3]>, stride is 5   [ rhs.c(95,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][3]>, stride is 5   [ rhs.c(96,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(98,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(98,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(99,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(99,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(100,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(105,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(106,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(107,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][4]>, stride is 5   [ rhs.c(108,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][4]>, stride is 5   [ rhs.c(110,19) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.324
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 15 
         remark #15452: unmasked strided loads: 35 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 273 
         remark #15477: vector cost: 179.000 
         remark #15478: estimated potential speedup: 1.490 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at rhs.c(62,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(118,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][1][m]>, stride is 325   [ rhs.c(121,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(122,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(122,37) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(123,13) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][2][m]>, stride is 325   [ rhs.c(128,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][1][m]>, stride is 325   [ rhs.c(129,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][2][m]>, stride is 325   [ rhs.c(129,39) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][3][m]>, stride is 325   [ rhs.c(130,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][4][m]>, stride is 325   [ rhs.c(130,34) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.046
      remark #15452: unmasked strided loads: 45 
      remark #15453: unmasked strided stores: 10 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 216 
      remark #15477: vector cost: 217.500 
      remark #15478: estimated potential speedup: 0.990 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=65
   LOOP END

   LOOP BEGIN at rhs.c(134,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(135,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at rhs.c(136,9)
         <Peeled loop for vectorization>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at rhs.c(136,9)
            remark #17107: loop was not parallelized: inner loop
            remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(137,11) ]
            remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(137,29) ]
            remark #15388: vectorization support: reference u[k][j][i-2][m] has aligned access   [ rhs.c(138,16) ]
            remark #15389: vectorization support: reference u[k][j][i-1][m] has unaligned access   [ rhs.c(138,38) ]
            remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(139,20) ]
            remark #15389: vectorization support: reference u[k][j][i+1][m] has unaligned access   [ rhs.c(139,40) ]
            remark #15388: vectorization support: reference u[k][j][i+2][m] has aligned access   [ rhs.c(140,16) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.296
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 4 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 27 
            remark #15477: vector cost: 13.500 
            remark #15478: estimated potential speedup: 1.390 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at rhs.c(136,9)
         <Alternate Alignment Vectorized Loop>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at rhs.c(136,9)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=5
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at rhs.c(145,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(148,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(149,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(149,35) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(150,17) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i+1][m]>, stride is 325   [ rhs.c(150,37) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(155,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-2][m]>, stride is 325   [ rhs.c(156,13) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i-1][m]>, stride is 325   [ rhs.c(156,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][m]>, stride is 325   [ rhs.c(157,16) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.046
      remark #15452: unmasked strided loads: 45 
      remark #15453: unmasked strided stores: 10 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 216 
      remark #15477: vector cost: 217.500 
      remark #15478: estimated potential speedup: 0.990 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(172,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(173,7)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at rhs.c(173,7)
      remark #17107: loop was not parallelized: inner loop
      remark #25427: Loop Statements Reordered
      remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(174,16) ]
      remark #15389: vectorization support: reference vs[k][j+1][i] has unaligned access   [ rhs.c(175,16) ]
      remark #15389: vectorization support: reference vs[k][j-1][i] has unaligned access   [ rhs.c(176,16) ]
      remark #15389: vectorization support: reference us[k][j+1][i] has unaligned access   [ rhs.c(184,21) ]
      remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(184,41) ]
      remark #15389: vectorization support: reference us[k][j-1][i] has unaligned access   [ rhs.c(185,15) ]
      remark #15388: vectorization support: reference square[k][j+1][i] has aligned access   [ rhs.c(194,34) ]
      remark #15388: vectorization support: reference square[k][j-1][i] has aligned access   [ rhs.c(195,34) ]
      remark #15389: vectorization support: reference ws[k][j+1][i] has unaligned access   [ rhs.c(200,21) ]
      remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(200,41) ]
      remark #15389: vectorization support: reference ws[k][j-1][i] has unaligned access   [ rhs.c(201,15) ]
      remark #15389: vectorization support: reference qs[k][j+1][i] has unaligned access   [ rhs.c(207,21) ]
      remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(207,41) ]
      remark #15389: vectorization support: reference qs[k][j-1][i] has unaligned access   [ rhs.c(208,15) ]
      remark #15389: vectorization support: reference rho_i[k][j+1][i] has unaligned access   [ rhs.c(211,37) ]
      remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(212,33) ]
      remark #15389: vectorization support: reference rho_i[k][j-1][i] has unaligned access   [ rhs.c(213,31) ]
      remark #15388: vectorization support: reference square[k][j+1][i] has aligned access   [ rhs.c(215,20) ]
      remark #15388: vectorization support: reference square[k][j-1][i] has aligned access   [ rhs.c(217,19) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(177,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(177,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][0]>, stride is 5   [ rhs.c(178,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(178,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][0]>, stride is 5   [ rhs.c(179,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][2]>, stride is 5   [ rhs.c(180,18) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][2]>, stride is 5   [ rhs.c(180,36) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(181,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(181,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][1]>, stride is 5   [ rhs.c(182,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(182,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][1]>, stride is 5   [ rhs.c(183,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][1]>, stride is 5   [ rhs.c(186,18) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][1]>, stride is 5   [ rhs.c(187,15) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(188,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(188,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][2]>, stride is 5   [ rhs.c(189,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(189,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][2]>, stride is 5   [ rhs.c(190,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][2]>, stride is 5   [ rhs.c(192,18) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][2]>, stride is 5   [ rhs.c(193,15) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(194,16) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(195,16) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(197,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(197,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][3]>, stride is 5   [ rhs.c(198,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(198,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][3]>, stride is 5   [ rhs.c(199,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][3]>, stride is 5   [ rhs.c(202,18) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][3]>, stride is 5   [ rhs.c(203,15) ]
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(204,9) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(204,27) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(205,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(205,34) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(206,12) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(211,21) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(212,19) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(213,15) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j+1][i][4]>, stride is 5   [ rhs.c(214,22) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j-1][i][4]>, stride is 5   [ rhs.c(216,19) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.324
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 2 
      remark #15450: unmasked unaligned unit stride loads: 15 
      remark #15452: unmasked strided loads: 35 
      remark #15453: unmasked strided stores: 5 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 273 
      remark #15477: vector cost: 179.000 
      remark #15478: estimated potential speedup: 1.490 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=32
   LOOP END

   LOOP BEGIN at rhs.c(173,7)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=65
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(242,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(243,7)
   <Peeled loop for vectorization>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at rhs.c(243,7)
      remark #17107: loop was not parallelized: inner loop
      remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(245,11) ]
      remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(245,29) ]
      remark #15388: vectorization support: reference u[k][j-2][i][m] has aligned access   [ rhs.c(246,16) ]
      remark #15389: vectorization support: reference u[k][j-1][i][m] has unaligned access   [ rhs.c(246,38) ]
      remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(247,20) ]
      remark #15389: vectorization support: reference u[k][j+1][i][m] has unaligned access   [ rhs.c(247,40) ]
      remark #15388: vectorization support: reference u[k][j+2][i][m] has aligned access   [ rhs.c(248,16) ]
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15305: vectorization support: vector length 2
      remark #15399: vectorization support: unroll factor set to 2
      remark #15309: vectorization support: normalized vectorization overhead 0.296
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 4 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 27 
      remark #15477: vector cost: 13.500 
      remark #15478: estimated potential speedup: 1.390 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at rhs.c(243,7)
   <Alternate Alignment Vectorized Loop>
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at rhs.c(243,7)
   <Remainder loop for vectorization>
      remark #25015: Estimate of max trip count of loop=5
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(281,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(282,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(283,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(283,7)
         remark #17107: loop was not parallelized: inner loop
         remark #25427: Loop Statements Reordered
         remark #15389: vectorization support: reference ws[k][j][i] has unaligned access   [ rhs.c(284,16) ]
         remark #15389: vectorization support: reference ws[k+1][j][i] has unaligned access   [ rhs.c(285,16) ]
         remark #15389: vectorization support: reference ws[k-1][j][i] has unaligned access   [ rhs.c(286,16) ]
         remark #15389: vectorization support: reference us[k+1][j][i] has unaligned access   [ rhs.c(295,21) ]
         remark #15389: vectorization support: reference us[k][j][i] has unaligned access   [ rhs.c(295,41) ]
         remark #15389: vectorization support: reference us[k-1][j][i] has unaligned access   [ rhs.c(296,15) ]
         remark #15389: vectorization support: reference vs[k+1][j][i] has unaligned access   [ rhs.c(302,21) ]
         remark #15389: vectorization support: reference vs[k][j][i] has unaligned access   [ rhs.c(302,41) ]
         remark #15389: vectorization support: reference vs[k-1][j][i] has unaligned access   [ rhs.c(303,15) ]
         remark #15388: vectorization support: reference square[k+1][j][i] has aligned access   [ rhs.c(312,34) ]
         remark #15388: vectorization support: reference square[k-1][j][i] has aligned access   [ rhs.c(313,34) ]
         remark #15389: vectorization support: reference qs[k+1][j][i] has unaligned access   [ rhs.c(318,21) ]
         remark #15389: vectorization support: reference qs[k][j][i] has unaligned access   [ rhs.c(318,41) ]
         remark #15389: vectorization support: reference qs[k-1][j][i] has unaligned access   [ rhs.c(319,15) ]
         remark #15389: vectorization support: reference rho_i[k+1][j][i] has unaligned access   [ rhs.c(322,37) ]
         remark #15389: vectorization support: reference rho_i[k][j][i] has unaligned access   [ rhs.c(323,33) ]
         remark #15389: vectorization support: reference rho_i[k-1][j][i] has unaligned access   [ rhs.c(324,31) ]
         remark #15388: vectorization support: reference square[k+1][j][i] has aligned access   [ rhs.c(326,20) ]
         remark #15388: vectorization support: reference square[k-1][j][i] has aligned access   [ rhs.c(328,19) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(288,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][0]>, stride is 5   [ rhs.c(288,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][0]>, stride is 5   [ rhs.c(289,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][0]>, stride is 5   [ rhs.c(289,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][0]>, stride is 5   [ rhs.c(290,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][3]>, stride is 5   [ rhs.c(291,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][3]>, stride is 5   [ rhs.c(291,36) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(292,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][1]>, stride is 5   [ rhs.c(292,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][1]>, stride is 5   [ rhs.c(293,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][1]>, stride is 5   [ rhs.c(293,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][1]>, stride is 5   [ rhs.c(294,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][1]>, stride is 5   [ rhs.c(297,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][1]>, stride is 5   [ rhs.c(298,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(299,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][2]>, stride is 5   [ rhs.c(299,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][2]>, stride is 5   [ rhs.c(300,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][2]>, stride is 5   [ rhs.c(300,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][2]>, stride is 5   [ rhs.c(301,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][2]>, stride is 5   [ rhs.c(304,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][2]>, stride is 5   [ rhs.c(305,15) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(306,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][3]>, stride is 5   [ rhs.c(306,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][3]>, stride is 5   [ rhs.c(307,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][3]>, stride is 5   [ rhs.c(307,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][3]>, stride is 5   [ rhs.c(308,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][3]>, stride is 5   [ rhs.c(310,18) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][3]>, stride is 5   [ rhs.c(311,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(312,16) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(313,16) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(315,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][4]>, stride is 5   [ rhs.c(315,27) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(316,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(316,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(317,12) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(322,21) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k][j][i][4]>, stride is 5   [ rhs.c(323,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(324,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k+1][j][i][4]>, stride is 5   [ rhs.c(325,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <u[k-1][j][i][4]>, stride is 5   [ rhs.c(327,19) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.324
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 15 
         remark #15452: unmasked strided loads: 35 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 273 
         remark #15477: vector cost: 179.000 
         remark #15478: estimated potential speedup: 1.490 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at rhs.c(283,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(339,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(340,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(341,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(341,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15388: vectorization support: reference rhs[1][j][i][m] has aligned access   [ rhs.c(342,9) ]
         remark #15388: vectorization support: reference rhs[1][j][i][m] has aligned access   [ rhs.c(342,27) ]
         remark #15388: vectorization support: reference u[1][j][i][m] has aligned access   [ rhs.c(343,17) ]
         remark #15389: vectorization support: reference u[2][j][i][m] has unaligned access   [ rhs.c(343,37) ]
         remark #15388: vectorization support: reference u[3][j][i][m] has aligned access   [ rhs.c(344,13) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.421
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 19 
         remark #15477: vector cost: 9.500 
         remark #15478: estimated potential speedup: 1.300 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(341,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(341,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(352,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(353,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(354,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(354,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15388: vectorization support: reference rhs[2][j][i][m] has aligned access   [ rhs.c(355,9) ]
         remark #15388: vectorization support: reference rhs[2][j][i][m] has aligned access   [ rhs.c(355,27) ]
         remark #15388: vectorization support: reference u[1][j][i][m] has aligned access   [ rhs.c(356,17) ]
         remark #15389: vectorization support: reference u[2][j][i][m] has unaligned access   [ rhs.c(356,39) ]
         remark #15388: vectorization support: reference u[3][j][i][m] has aligned access   [ rhs.c(357,16) ]
         remark #15389: vectorization support: reference u[4][j][i][m] has unaligned access   [ rhs.c(357,34) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.320
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 12.500 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(354,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(354,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(364,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(365,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(366,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(366,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(368,11) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(368,29) ]
         remark #15388: vectorization support: reference u[k-2][j][i][m] has aligned access   [ rhs.c(369,16) ]
         remark #15389: vectorization support: reference u[k-1][j][i][m] has unaligned access   [ rhs.c(369,38) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(370,20) ]
         remark #15389: vectorization support: reference u[k+1][j][i][m] has unaligned access   [ rhs.c(370,40) ]
         remark #15388: vectorization support: reference u[k+2][j][i][m] has aligned access   [ rhs.c(371,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.296
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 27 
         remark #15477: vector cost: 13.500 
         remark #15478: estimated potential speedup: 1.390 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(366,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(366,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(380,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(381,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(382,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(382,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(383,9) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(383,27) ]
         remark #15388: vectorization support: reference u[k-2][j][i][m] has aligned access   [ rhs.c(384,13) ]
         remark #15389: vectorization support: reference u[k-1][j][i][m] has unaligned access   [ rhs.c(384,35) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(385,17) ]
         remark #15389: vectorization support: reference u[k+1][j][i][m] has unaligned access   [ rhs.c(385,37) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.320
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 24 
         remark #15477: vector cost: 12.500 
         remark #15478: estimated potential speedup: 1.330 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(382,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(382,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(393,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at rhs.c(394,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(395,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(395,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(396,9) ]
         remark #15388: vectorization support: reference rhs[k][j][i][m] has aligned access   [ rhs.c(396,27) ]
         remark #15388: vectorization support: reference u[k-2][j][i][m] has aligned access   [ rhs.c(397,13) ]
         remark #15389: vectorization support: reference u[k-1][j][i][m] has unaligned access   [ rhs.c(397,34) ]
         remark #15388: vectorization support: reference u[k][j][i][m] has aligned access   [ rhs.c(398,16) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.421
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 19 
         remark #15477: vector cost: 9.500 
         remark #15478: estimated potential speedup: 1.300 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(395,7)
      <Alternate Alignment Vectorized Loop>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at rhs.c(395,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at rhs.c(409,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 21125   [ rhs.c(413,11) ]
   remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 21125   [ rhs.c(413,29) ]
   remark #15305: vectorization support: vector length 2
   remark #15309: vectorization support: normalized vectorization overhead 0.154
   remark #15452: unmasked strided loads: 1 
   remark #15453: unmasked strided stores: 1 
   remark #15475: --- begin vector cost summary ---
   remark #15476: scalar cost: 6 
   remark #15477: vector cost: 6.500 
   remark #15478: estimated potential speedup: 0.910 
   remark #15488: --- end vector cost summary ---
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at rhs.c(410,5)
      remark #17107: loop was not parallelized: inner loop
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15329: vectorization support: non-unit strided store was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(413,11) ]
      remark #15328: vectorization support: non-unit strided load was emulated for the variable <rhs[k][j][i][m]>, stride is 325   [ rhs.c(413,29) ]
      remark #15305: vectorization support: vector length 2
      remark #15309: vectorization support: normalized vectorization overhead 0.167
      remark #15452: unmasked strided loads: 1 
      remark #15453: unmasked strided stores: 1 
      remark #15475: --- begin vector cost summary ---
      remark #15476: scalar cost: 6 
      remark #15477: vector cost: 6.000 
      remark #15478: estimated potential speedup: 0.990 
      remark #15488: --- end vector cost summary ---
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at rhs.c(411,7)
         remark #17107: loop was not parallelized: inner loop
         remark #15389: vectorization support: reference rhs[k][j][i][m] has unaligned access   [ rhs.c(413,11) ]
         remark #15389: vectorization support: reference rhs[k][j][i][m] has unaligned access   [ rhs.c(413,29) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.444
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 6 
         remark #15477: vector cost: 4.500 
         remark #15478: estimated potential speedup: 0.930 
         remark #15488: --- end vector cost summary ---
         remark #25439: unrolled with remainder by 8  
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at rhs.c(411,7)
      <Remainder>
         remark #25436: completely unrolled by 7  
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

rhs.c(98,9):remark #34070: adjacent sparse (strided) stores seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
rhs.c(204,9):remark #34070: adjacent sparse (strided) stores seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
rhs.c(315,9):remark #34070: adjacent sparse (strided) stores seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
rhs.c(98,9):remark #34070: adjacent sparse (strided) stores seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
rhs.c(204,9):remark #34070: adjacent sparse (strided) stores seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
rhs.c(315,9):remark #34070: adjacent sparse (strided) stores seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
rhs.c(5,1):remark #34051: REGISTER ALLOCATION : [compute_rhs] rhs.c:5

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    6156
            Global    :     828
            Local     :    5328
        Regenerable   :     615
        Spilled       :     229
        
    Routine stack
        Variables     :     996 bytes*
            Reads     :      22 [1.18e-03 ~ 0.0%]
            Writes    :     192 [0.00e+00 ~ 0.0%]
        Spills        :    2528 bytes*
            Reads     :     488 [2.78e+00 ~ 2.8%]
            Writes    :     364 [3.93e-03 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
