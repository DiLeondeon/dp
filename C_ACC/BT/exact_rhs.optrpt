Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.

Intel(R) C Intel(R) 64 Compiler Classic for applications running on Intel(R) 64, Version 2021.8.0 Build 20221119_000000

Compiler options: -I../common -c -g -Wall -O3 -parallel -qopt-report=5

    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: exact_rhs()

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (exact_rhs()) [1/1=100.0%] exact_rhs.c(7,1)
  -> EXTERN: (43,9) exact_solution(double, double, double, double *)
  -> EXTERN: (139,9) exact_solution(double, double, double, double *)
  -> EXTERN: (235,9) exact_solution(double, double, double, double *)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at exact_rhs.c(21,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at exact_rhs.c(22,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at exact_rhs.c(23,7)
         remark #25420: Collapsed with loop at line 24 
         remark #25408: memset generated
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed OUTPUT dependence between forcing[k][j][i][m] (23:7) and forcing[k][j][i][m] (25:11)
         remark #17106: parallel dependence: assumed OUTPUT dependence between forcing[k][j][i][m] (25:11) and forcing[k][j][i][m] (23:7)
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=1

         LOOP BEGIN at exact_rhs.c(23,7)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(25,11) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.300
            remark #15300: LOOP WAS VECTORIZED
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 2.500 
            remark #15478: estimated potential speedup: 1.450 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=3
         LOOP END

         LOOP BEGIN at exact_rhs.c(23,7)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=12
         LOOP END

         LOOP BEGIN at exact_rhs.c(24,9)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at exact_rhs.c(35,3)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at exact_rhs.c(37,5)
      remark #17102: loop was not parallelized: not a parallelization candidate
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at exact_rhs.c(40,7)
         remark #17102: loop was not parallelized: not a parallelization candidate
         remark #15523: loop was not vectorized: loop control variable i was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at exact_rhs.c(44,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference ue[i][m] has unaligned access   [ exact_rhs.c(45,11) ]
            remark #15388: vectorization support: reference dtemp[m] has aligned access   [ exact_rhs.c(45,22) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.600
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 2.500 
            remark #15478: estimated potential speedup: 1.000 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=5
         LOOP END

         LOOP BEGIN at exact_rhs.c(50,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference buf[i][m] has unaligned access   [ exact_rhs.c(51,11) ]
            remark #15389: vectorization support: reference dtemp[m] has unaligned access   [ exact_rhs.c(51,30) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15427: loop was completely unrolled
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.778
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 6 
            remark #15477: vector cost: 4.500 
            remark #15478: estimated potential speedup: 0.750 
            remark #15488: --- end vector cost summary ---
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END

      LOOP BEGIN at exact_rhs.c(60,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference q[i+1] has aligned access   [ exact_rhs.c(69,52) ]
         remark #15388: vectorization support: reference q[i-1] has aligned access   [ exact_rhs.c(70,52) ]
         remark #15388: vectorization support: reference q[i+1] has aligned access   [ exact_rhs.c(85,43) ]
         remark #15388: vectorization support: reference q[i-1] has aligned access   [ exact_rhs.c(86,43) ]
         remark #15388: vectorization support: reference cuf[i+1] has aligned access   [ exact_rhs.c(89,19) ]
         remark #15389: vectorization support: reference cuf[i] has unaligned access   [ exact_rhs.c(89,32) ]
         remark #15388: vectorization support: reference cuf[i-1] has aligned access   [ exact_rhs.c(89,39) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][0]>, stride is 5   [ exact_rhs.c(64,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][0]>, stride is 5   [ exact_rhs.c(64,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][1]>, stride is 5   [ exact_rhs.c(65,17) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][1]>, stride is 5   [ exact_rhs.c(65,28) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][0]>, stride is 5   [ exact_rhs.c(66,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i][0]>, stride is 5   [ exact_rhs.c(66,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][0]>, stride is 5   [ exact_rhs.c(66,43) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][1]>, stride is 5   [ exact_rhs.c(68,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][1]>, stride is 5   [ exact_rhs.c(68,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][1]>, stride is 5   [ exact_rhs.c(69,14) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][1]>, stride is 5   [ exact_rhs.c(69,25) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][4]>, stride is 5   [ exact_rhs.c(69,41) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][1]>, stride is 5   [ exact_rhs.c(70,14) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][1]>, stride is 5   [ exact_rhs.c(70,25) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][4]>, stride is 5   [ exact_rhs.c(70,41) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][1]>, stride is 5   [ exact_rhs.c(71,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i][1]>, stride is 5   [ exact_rhs.c(71,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][1]>, stride is 5   [ exact_rhs.c(71,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][1]>, stride is 5   [ exact_rhs.c(72,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i][1]>, stride is 5   [ exact_rhs.c(72,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][1]>, stride is 5   [ exact_rhs.c(72,45) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][2]>, stride is 5   [ exact_rhs.c(74,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][2]>, stride is 5   [ exact_rhs.c(74,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][2]>, stride is 5   [ exact_rhs.c(75,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][1]>, stride is 5   [ exact_rhs.c(75,24) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][2]>, stride is 5   [ exact_rhs.c(75,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][1]>, stride is 5   [ exact_rhs.c(75,47) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][2]>, stride is 5   [ exact_rhs.c(76,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i][2]>, stride is 5   [ exact_rhs.c(76,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][2]>, stride is 5   [ exact_rhs.c(76,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][2]>, stride is 5   [ exact_rhs.c(77,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i][2]>, stride is 5   [ exact_rhs.c(77,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][2]>, stride is 5   [ exact_rhs.c(77,45) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][3]>, stride is 5   [ exact_rhs.c(79,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][3]>, stride is 5   [ exact_rhs.c(79,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][3]>, stride is 5   [ exact_rhs.c(80,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][1]>, stride is 5   [ exact_rhs.c(80,24) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][3]>, stride is 5   [ exact_rhs.c(80,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][1]>, stride is 5   [ exact_rhs.c(80,47) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][3]>, stride is 5   [ exact_rhs.c(81,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i][3]>, stride is 5   [ exact_rhs.c(81,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][3]>, stride is 5   [ exact_rhs.c(81,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][3]>, stride is 5   [ exact_rhs.c(82,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i][3]>, stride is 5   [ exact_rhs.c(82,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][3]>, stride is 5   [ exact_rhs.c(82,46) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][4]>, stride is 5   [ exact_rhs.c(84,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][4]>, stride is 5   [ exact_rhs.c(84,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][1]>, stride is 5   [ exact_rhs.c(85,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][4]>, stride is 5   [ exact_rhs.c(85,29) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][1]>, stride is 5   [ exact_rhs.c(86,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][4]>, stride is 5   [ exact_rhs.c(86,29) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][0]>, stride is 5   [ exact_rhs.c(87,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i][0]>, stride is 5   [ exact_rhs.c(87,39) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][0]>, stride is 5   [ exact_rhs.c(88,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i+1][4]>, stride is 5   [ exact_rhs.c(90,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i][4]>, stride is 5   [ exact_rhs.c(90,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[i-1][4]>, stride is 5   [ exact_rhs.c(90,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i+1][4]>, stride is 5   [ exact_rhs.c(91,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i][4]>, stride is 5   [ exact_rhs.c(91,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[i-1][4]>, stride is 5   [ exact_rhs.c(91,46) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.091
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 55 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 252 
         remark #15477: vector cost: 241.000 
         remark #15478: estimated potential speedup: 1.040 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at exact_rhs.c(60,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at exact_rhs.c(97,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference forcing[k][j][1][m] has unaligned access   [ exact_rhs.c(99,9) ]
         remark #15389: vectorization support: reference forcing[k][j][1][m] has unaligned access   [ exact_rhs.c(99,31) ]
         remark #15389: vectorization support: reference ue[1][m] has unaligned access   [ exact_rhs.c(100,16) ]
         remark #15388: vectorization support: reference ue[2][m] has aligned access   [ exact_rhs.c(100,31) ]
         remark #15389: vectorization support: reference ue[3][m] has unaligned access   [ exact_rhs.c(100,43) ]
         remark #15389: vectorization support: reference forcing[k][j][2][m] has unaligned access   [ exact_rhs.c(102,9) ]
         remark #15389: vectorization support: reference forcing[k][j][2][m] has unaligned access   [ exact_rhs.c(102,31) ]
         remark #15389: vectorization support: reference ue[1][m] has unaligned access   [ exact_rhs.c(103,17) ]
         remark #15388: vectorization support: reference ue[2][m] has aligned access   [ exact_rhs.c(103,34) ]
         remark #15389: vectorization support: reference ue[3][m] has unaligned access   [ exact_rhs.c(104,17) ]
         remark #15388: vectorization support: reference ue[4][m] has aligned access   [ exact_rhs.c(104,34) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.327
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 4 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 43 
         remark #15477: vector cost: 24.500 
         remark #15478: estimated potential speedup: 1.360 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=2
      LOOP END

      LOOP BEGIN at exact_rhs.c(107,7)
         remark #25420: Collapsed with loop at line 108 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(109,11) ]
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(109,33) ]
         remark #15389: vectorization support: reference ue[i-2][m] has unaligned access   [ exact_rhs.c(110,14) ]
         remark #15388: vectorization support: reference ue[i-1][m] has aligned access   [ exact_rhs.c(110,31) ]
         remark #15389: vectorization support: reference ue[i][m] has unaligned access   [ exact_rhs.c(111,18) ]
         remark #15388: vectorization support: reference ue[i+1][m] has aligned access   [ exact_rhs.c(111,33) ]
         remark #15389: vectorization support: reference ue[i+2][m] has unaligned access   [ exact_rhs.c(111,46) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 0.129
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 4 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 27 
         remark #15477: vector cost: 15.500 
         remark #15478: estimated potential speedup: 1.390 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1

         LOOP BEGIN at exact_rhs.c(108,9)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at exact_rhs.c(107,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at exact_rhs.c(115,7)
      <Peeled loop for vectorization>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at exact_rhs.c(115,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference forcing[k][j][:][m] has unaligned access   [ exact_rhs.c(117,9) ]
         remark #15389: vectorization support: reference forcing[k][j][:][m] has unaligned access   [ exact_rhs.c(117,31) ]
         remark #15389: vectorization support: reference ue[?-2][m] has unaligned access   [ exact_rhs.c(118,12) ]
         remark #15388: vectorization support: reference ue[?-1][m] has aligned access   [ exact_rhs.c(118,29) ]
         remark #15389: vectorization support: reference ue[:][m] has unaligned access   [ exact_rhs.c(119,16) ]
         remark #15388: vectorization support: reference ue[?+1][m] has aligned access   [ exact_rhs.c(119,31) ]
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(121,9) ]
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(121,31) ]
         remark #15388: vectorization support: reference ue[i-2][m] has aligned access   [ exact_rhs.c(122,12) ]
         remark #15389: vectorization support: reference ue[i-1][m] has unaligned access   [ exact_rhs.c(122,29) ]
         remark #15388: vectorization support: reference ue[i][m] has aligned access   [ exact_rhs.c(122,46) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.531
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 4 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 43 
         remark #15477: vector cost: 24.500 
         remark #15478: estimated potential speedup: 1.280 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=2
      LOOP END

      LOOP BEGIN at exact_rhs.c(115,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at exact_rhs.c(97,7)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at exact_rhs.c(131,3)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at exact_rhs.c(133,5)
      remark #17102: loop was not parallelized: not a parallelization candidate
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at exact_rhs.c(136,7)
         remark #17102: loop was not parallelized: not a parallelization candidate
         remark #15523: loop was not vectorized: loop control variable j was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at exact_rhs.c(140,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference ue[j][m] has unaligned access   [ exact_rhs.c(141,11) ]
            remark #15388: vectorization support: reference dtemp[m] has aligned access   [ exact_rhs.c(141,22) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.600
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 2.500 
            remark #15478: estimated potential speedup: 1.000 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=5
         LOOP END

         LOOP BEGIN at exact_rhs.c(146,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference buf[j][m] has unaligned access   [ exact_rhs.c(147,11) ]
            remark #15389: vectorization support: reference dtemp[m] has unaligned access   [ exact_rhs.c(147,30) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15427: loop was completely unrolled
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.778
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 6 
            remark #15477: vector cost: 4.500 
            remark #15478: estimated potential speedup: 0.750 
            remark #15488: --- end vector cost summary ---
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END

      LOOP BEGIN at exact_rhs.c(156,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference q[j+1] has aligned access   [ exact_rhs.c(170,52) ]
         remark #15388: vectorization support: reference q[j-1] has aligned access   [ exact_rhs.c(171,52) ]
         remark #15388: vectorization support: reference q[j+1] has aligned access   [ exact_rhs.c(181,43) ]
         remark #15388: vectorization support: reference q[j-1] has aligned access   [ exact_rhs.c(182,43) ]
         remark #15388: vectorization support: reference cuf[j+1] has aligned access   [ exact_rhs.c(185,19) ]
         remark #15389: vectorization support: reference cuf[j] has unaligned access   [ exact_rhs.c(185,32) ]
         remark #15388: vectorization support: reference cuf[j-1] has aligned access   [ exact_rhs.c(185,39) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][0]>, stride is 325   [ exact_rhs.c(160,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][0]>, stride is 325   [ exact_rhs.c(160,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][2]>, stride is 5   [ exact_rhs.c(161,17) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][2]>, stride is 5   [ exact_rhs.c(161,28) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][0]>, stride is 5   [ exact_rhs.c(162,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j][0]>, stride is 5   [ exact_rhs.c(162,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][0]>, stride is 5   [ exact_rhs.c(162,43) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][1]>, stride is 325   [ exact_rhs.c(164,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][1]>, stride is 325   [ exact_rhs.c(164,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][1]>, stride is 5   [ exact_rhs.c(165,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][2]>, stride is 5   [ exact_rhs.c(165,24) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][1]>, stride is 5   [ exact_rhs.c(165,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][2]>, stride is 5   [ exact_rhs.c(165,47) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][1]>, stride is 5   [ exact_rhs.c(166,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j][1]>, stride is 5   [ exact_rhs.c(166,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][1]>, stride is 5   [ exact_rhs.c(166,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][1]>, stride is 5   [ exact_rhs.c(167,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j][1]>, stride is 5   [ exact_rhs.c(167,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][1]>, stride is 5   [ exact_rhs.c(167,46) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][2]>, stride is 325   [ exact_rhs.c(169,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][2]>, stride is 325   [ exact_rhs.c(169,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][2]>, stride is 5   [ exact_rhs.c(170,14) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][2]>, stride is 5   [ exact_rhs.c(170,25) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][4]>, stride is 5   [ exact_rhs.c(170,41) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][2]>, stride is 5   [ exact_rhs.c(171,14) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][2]>, stride is 5   [ exact_rhs.c(171,25) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][4]>, stride is 5   [ exact_rhs.c(171,41) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][2]>, stride is 5   [ exact_rhs.c(172,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j][2]>, stride is 5   [ exact_rhs.c(172,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][2]>, stride is 5   [ exact_rhs.c(172,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][2]>, stride is 5   [ exact_rhs.c(173,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j][2]>, stride is 5   [ exact_rhs.c(173,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][2]>, stride is 5   [ exact_rhs.c(173,45) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][3]>, stride is 325   [ exact_rhs.c(175,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][3]>, stride is 325   [ exact_rhs.c(175,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][3]>, stride is 5   [ exact_rhs.c(176,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][2]>, stride is 5   [ exact_rhs.c(176,24) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][3]>, stride is 5   [ exact_rhs.c(176,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][2]>, stride is 5   [ exact_rhs.c(176,47) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][3]>, stride is 5   [ exact_rhs.c(177,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j][3]>, stride is 5   [ exact_rhs.c(177,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][3]>, stride is 5   [ exact_rhs.c(177,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][3]>, stride is 5   [ exact_rhs.c(178,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j][3]>, stride is 5   [ exact_rhs.c(178,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][3]>, stride is 5   [ exact_rhs.c(178,45) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][4]>, stride is 325   [ exact_rhs.c(180,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][4]>, stride is 325   [ exact_rhs.c(180,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][2]>, stride is 5   [ exact_rhs.c(181,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][4]>, stride is 5   [ exact_rhs.c(181,29) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][2]>, stride is 5   [ exact_rhs.c(182,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][4]>, stride is 5   [ exact_rhs.c(182,29) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][0]>, stride is 5   [ exact_rhs.c(183,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j][0]>, stride is 5   [ exact_rhs.c(183,39) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][0]>, stride is 5   [ exact_rhs.c(184,15) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j+1][4]>, stride is 5   [ exact_rhs.c(186,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j][4]>, stride is 5   [ exact_rhs.c(186,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[j-1][4]>, stride is 5   [ exact_rhs.c(186,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j+1][4]>, stride is 5   [ exact_rhs.c(187,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j][4]>, stride is 5   [ exact_rhs.c(187,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[j-1][4]>, stride is 5   [ exact_rhs.c(187,43) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.091
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 55 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 252 
         remark #15477: vector cost: 241.000 
         remark #15478: estimated potential speedup: 1.040 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at exact_rhs.c(156,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=65
      LOOP END

      LOOP BEGIN at exact_rhs.c(193,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference forcing[k][1][i][m] has unaligned access   [ exact_rhs.c(195,9) ]
         remark #15389: vectorization support: reference forcing[k][1][i][m] has unaligned access   [ exact_rhs.c(195,31) ]
         remark #15389: vectorization support: reference ue[1][m] has unaligned access   [ exact_rhs.c(196,16) ]
         remark #15388: vectorization support: reference ue[2][m] has aligned access   [ exact_rhs.c(196,31) ]
         remark #15389: vectorization support: reference ue[3][m] has unaligned access   [ exact_rhs.c(196,43) ]
         remark #15389: vectorization support: reference forcing[k][2][i][m] has unaligned access   [ exact_rhs.c(198,9) ]
         remark #15389: vectorization support: reference forcing[k][2][i][m] has unaligned access   [ exact_rhs.c(198,31) ]
         remark #15389: vectorization support: reference ue[1][m] has unaligned access   [ exact_rhs.c(199,17) ]
         remark #15388: vectorization support: reference ue[2][m] has aligned access   [ exact_rhs.c(199,34) ]
         remark #15389: vectorization support: reference ue[3][m] has unaligned access   [ exact_rhs.c(200,16) ]
         remark #15388: vectorization support: reference ue[4][m] has aligned access   [ exact_rhs.c(200,35) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.327
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 4 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 43 
         remark #15477: vector cost: 24.500 
         remark #15478: estimated potential speedup: 1.360 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=2
      LOOP END

      LOOP BEGIN at exact_rhs.c(203,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=65

         LOOP BEGIN at exact_rhs.c(204,9)
         <Peeled loop for vectorization>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at exact_rhs.c(204,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference forcing[k][j][i][m] has aligned access   [ exact_rhs.c(205,11) ]
            remark #15388: vectorization support: reference forcing[k][j][i][m] has aligned access   [ exact_rhs.c(205,33) ]
            remark #15388: vectorization support: reference ue[j-2][m] has aligned access   [ exact_rhs.c(206,14) ]
            remark #15389: vectorization support: reference ue[j-1][m] has unaligned access   [ exact_rhs.c(206,31) ]
            remark #15388: vectorization support: reference ue[j][m] has aligned access   [ exact_rhs.c(207,18) ]
            remark #15389: vectorization support: reference ue[j+1][m] has unaligned access   [ exact_rhs.c(207,33) ]
            remark #15388: vectorization support: reference ue[j+2][m] has aligned access   [ exact_rhs.c(207,46) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.296
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 4 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 27 
            remark #15477: vector cost: 13.500 
            remark #15478: estimated potential speedup: 1.390 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at exact_rhs.c(204,9)
         <Alternate Alignment Vectorized Loop>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at exact_rhs.c(204,9)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=5
         LOOP END
      LOOP END

      LOOP BEGIN at exact_rhs.c(211,7)
      <Peeled loop for vectorization>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at exact_rhs.c(211,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference forcing[k][:][i][m] has unaligned access   [ exact_rhs.c(213,9) ]
         remark #15389: vectorization support: reference forcing[k][:][i][m] has unaligned access   [ exact_rhs.c(213,31) ]
         remark #15389: vectorization support: reference ue[?-2][m] has unaligned access   [ exact_rhs.c(214,12) ]
         remark #15388: vectorization support: reference ue[?-1][m] has aligned access   [ exact_rhs.c(214,29) ]
         remark #15389: vectorization support: reference ue[:][m] has unaligned access   [ exact_rhs.c(215,16) ]
         remark #15388: vectorization support: reference ue[?+1][m] has aligned access   [ exact_rhs.c(215,31) ]
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(217,9) ]
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(217,31) ]
         remark #15388: vectorization support: reference ue[j-2][m] has aligned access   [ exact_rhs.c(218,12) ]
         remark #15389: vectorization support: reference ue[j-1][m] has unaligned access   [ exact_rhs.c(218,29) ]
         remark #15388: vectorization support: reference ue[j][m] has aligned access   [ exact_rhs.c(218,46) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.531
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 4 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 43 
         remark #15477: vector cost: 24.500 
         remark #15478: estimated potential speedup: 1.280 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=2
      LOOP END

      LOOP BEGIN at exact_rhs.c(211,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at exact_rhs.c(193,7)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at exact_rhs.c(227,3)
   remark #17102: loop was not parallelized: not a parallelization candidate
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=65

   LOOP BEGIN at exact_rhs.c(229,5)
      remark #17102: loop was not parallelized: not a parallelization candidate
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at exact_rhs.c(232,7)
         remark #17102: loop was not parallelized: not a parallelization candidate
         remark #15523: loop was not vectorized: loop control variable k was found, but loop iteration count cannot be computed before executing the loop

         LOOP BEGIN at exact_rhs.c(236,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference ue[k][m] has unaligned access   [ exact_rhs.c(237,11) ]
            remark #15388: vectorization support: reference dtemp[m] has aligned access   [ exact_rhs.c(237,22) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.600
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 4 
            remark #15477: vector cost: 2.500 
            remark #15478: estimated potential speedup: 1.000 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=5
         LOOP END

         LOOP BEGIN at exact_rhs.c(242,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15389: vectorization support: reference buf[k][m] has unaligned access   [ exact_rhs.c(243,11) ]
            remark #15389: vectorization support: reference dtemp[m] has unaligned access   [ exact_rhs.c(243,30) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15305: vectorization support: vector length 2
            remark #15427: loop was completely unrolled
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.778
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15451: unmasked unaligned unit stride stores: 1 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 6 
            remark #15477: vector cost: 4.500 
            remark #15478: estimated potential speedup: 0.750 
            remark #15488: --- end vector cost summary ---
            remark #25436: completely unrolled by 4  
         LOOP END
      LOOP END

      LOOP BEGIN at exact_rhs.c(252,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference q[k+1] has aligned access   [ exact_rhs.c(271,52) ]
         remark #15388: vectorization support: reference q[k-1] has aligned access   [ exact_rhs.c(272,52) ]
         remark #15388: vectorization support: reference q[k+1] has aligned access   [ exact_rhs.c(277,43) ]
         remark #15388: vectorization support: reference q[k-1] has aligned access   [ exact_rhs.c(278,43) ]
         remark #15388: vectorization support: reference cuf[k+1] has aligned access   [ exact_rhs.c(281,19) ]
         remark #15389: vectorization support: reference cuf[k] has unaligned access   [ exact_rhs.c(281,32) ]
         remark #15388: vectorization support: reference cuf[k-1] has aligned access   [ exact_rhs.c(281,39) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][0]>, stride is 21125   [ exact_rhs.c(256,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][0]>, stride is 21125   [ exact_rhs.c(256,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][3]>, stride is 5   [ exact_rhs.c(257,17) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][3]>, stride is 5   [ exact_rhs.c(257,28) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][0]>, stride is 5   [ exact_rhs.c(258,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k][0]>, stride is 5   [ exact_rhs.c(258,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][0]>, stride is 5   [ exact_rhs.c(258,43) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][1]>, stride is 21125   [ exact_rhs.c(260,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][1]>, stride is 21125   [ exact_rhs.c(260,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][1]>, stride is 5   [ exact_rhs.c(261,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][3]>, stride is 5   [ exact_rhs.c(261,24) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][1]>, stride is 5   [ exact_rhs.c(261,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][3]>, stride is 5   [ exact_rhs.c(261,47) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][1]>, stride is 5   [ exact_rhs.c(262,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k][1]>, stride is 5   [ exact_rhs.c(262,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][1]>, stride is 5   [ exact_rhs.c(262,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][1]>, stride is 5   [ exact_rhs.c(263,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k][1]>, stride is 5   [ exact_rhs.c(263,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][1]>, stride is 5   [ exact_rhs.c(263,46) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][2]>, stride is 21125   [ exact_rhs.c(265,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][2]>, stride is 21125   [ exact_rhs.c(265,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][2]>, stride is 5   [ exact_rhs.c(266,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][3]>, stride is 5   [ exact_rhs.c(266,24) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][2]>, stride is 5   [ exact_rhs.c(266,36) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][3]>, stride is 5   [ exact_rhs.c(266,47) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][2]>, stride is 5   [ exact_rhs.c(267,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k][2]>, stride is 5   [ exact_rhs.c(267,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][2]>, stride is 5   [ exact_rhs.c(267,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][2]>, stride is 5   [ exact_rhs.c(268,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k][2]>, stride is 5   [ exact_rhs.c(268,34) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][2]>, stride is 5   [ exact_rhs.c(268,43) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][3]>, stride is 21125   [ exact_rhs.c(270,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][3]>, stride is 21125   [ exact_rhs.c(270,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][3]>, stride is 5   [ exact_rhs.c(271,14) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][3]>, stride is 5   [ exact_rhs.c(271,25) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][4]>, stride is 5   [ exact_rhs.c(271,41) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][3]>, stride is 5   [ exact_rhs.c(272,14) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][3]>, stride is 5   [ exact_rhs.c(272,25) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][4]>, stride is 5   [ exact_rhs.c(272,41) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][3]>, stride is 5   [ exact_rhs.c(273,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k][3]>, stride is 5   [ exact_rhs.c(273,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][3]>, stride is 5   [ exact_rhs.c(273,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][3]>, stride is 5   [ exact_rhs.c(274,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k][3]>, stride is 5   [ exact_rhs.c(274,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][3]>, stride is 5   [ exact_rhs.c(274,45) ]
         remark #15329: vectorization support: non-unit strided store was emulated for the variable <forcing[k][j][i][4]>, stride is 21125   [ exact_rhs.c(276,9) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <forcing[k][j][i][4]>, stride is 21125   [ exact_rhs.c(276,31) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][3]>, stride is 5   [ exact_rhs.c(277,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][4]>, stride is 5   [ exact_rhs.c(277,29) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][3]>, stride is 5   [ exact_rhs.c(278,13) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][4]>, stride is 5   [ exact_rhs.c(278,29) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][0]>, stride is 5   [ exact_rhs.c(279,23) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k][0]>, stride is 5   [ exact_rhs.c(279,39) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][0]>, stride is 5   [ exact_rhs.c(280,16) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k+1][4]>, stride is 5   [ exact_rhs.c(282,19) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k][4]>, stride is 5   [ exact_rhs.c(282,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <buf[k-1][4]>, stride is 5   [ exact_rhs.c(282,45) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k+1][4]>, stride is 5   [ exact_rhs.c(283,20) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k][4]>, stride is 5   [ exact_rhs.c(283,35) ]
         remark #15328: vectorization support: non-unit strided load was emulated for the variable <ue[k-1][4]>, stride is 5   [ exact_rhs.c(283,45) ]
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.091
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 4 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15452: unmasked strided loads: 55 
         remark #15453: unmasked strided stores: 5 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 252 
         remark #15477: vector cost: 241.000 
         remark #15478: estimated potential speedup: 1.040 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=32
      LOOP END

      LOOP BEGIN at exact_rhs.c(252,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=64
      LOOP END

      LOOP BEGIN at exact_rhs.c(289,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference forcing[1][j][i][m] has unaligned access   [ exact_rhs.c(291,9) ]
         remark #15389: vectorization support: reference forcing[1][j][i][m] has unaligned access   [ exact_rhs.c(291,31) ]
         remark #15389: vectorization support: reference ue[1][m] has unaligned access   [ exact_rhs.c(292,16) ]
         remark #15388: vectorization support: reference ue[2][m] has aligned access   [ exact_rhs.c(292,31) ]
         remark #15389: vectorization support: reference ue[3][m] has unaligned access   [ exact_rhs.c(292,43) ]
         remark #15389: vectorization support: reference forcing[2][j][i][m] has unaligned access   [ exact_rhs.c(294,9) ]
         remark #15389: vectorization support: reference forcing[2][j][i][m] has unaligned access   [ exact_rhs.c(294,31) ]
         remark #15389: vectorization support: reference ue[1][m] has unaligned access   [ exact_rhs.c(295,17) ]
         remark #15388: vectorization support: reference ue[2][m] has aligned access   [ exact_rhs.c(295,34) ]
         remark #15389: vectorization support: reference ue[3][m] has unaligned access   [ exact_rhs.c(296,16) ]
         remark #15388: vectorization support: reference ue[4][m] has aligned access   [ exact_rhs.c(296,35) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.327
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 4 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 43 
         remark #15477: vector cost: 24.500 
         remark #15478: estimated potential speedup: 1.360 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=2
      LOOP END

      LOOP BEGIN at exact_rhs.c(299,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=64

         LOOP BEGIN at exact_rhs.c(300,9)
         <Peeled loop for vectorization>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at exact_rhs.c(300,9)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference forcing[k][j][i][m] has aligned access   [ exact_rhs.c(301,11) ]
            remark #15388: vectorization support: reference forcing[k][j][i][m] has aligned access   [ exact_rhs.c(301,33) ]
            remark #15388: vectorization support: reference ue[k-2][m] has aligned access   [ exact_rhs.c(302,14) ]
            remark #15389: vectorization support: reference ue[k-1][m] has unaligned access   [ exact_rhs.c(302,31) ]
            remark #15388: vectorization support: reference ue[k][m] has aligned access   [ exact_rhs.c(303,18) ]
            remark #15389: vectorization support: reference ue[k+1][m] has unaligned access   [ exact_rhs.c(303,33) ]
            remark #15388: vectorization support: reference ue[k+2][m] has aligned access   [ exact_rhs.c(303,46) ]
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15305: vectorization support: vector length 2
            remark #15399: vectorization support: unroll factor set to 2
            remark #15309: vectorization support: normalized vectorization overhead 0.296
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 4 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15450: unmasked unaligned unit stride loads: 2 
            remark #15475: --- begin vector cost summary ---
            remark #15476: scalar cost: 27 
            remark #15477: vector cost: 13.500 
            remark #15478: estimated potential speedup: 1.390 
            remark #15488: --- end vector cost summary ---
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at exact_rhs.c(300,9)
         <Alternate Alignment Vectorized Loop>
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at exact_rhs.c(300,9)
         <Remainder loop for vectorization>
            remark #25015: Estimate of max trip count of loop=5
         LOOP END
      LOOP END

      LOOP BEGIN at exact_rhs.c(307,7)
      <Peeled loop for vectorization>
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at exact_rhs.c(307,7)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference forcing[:][j][i][m] has unaligned access   [ exact_rhs.c(309,9) ]
         remark #15389: vectorization support: reference forcing[:][j][i][m] has unaligned access   [ exact_rhs.c(309,31) ]
         remark #15389: vectorization support: reference ue[?-2][m] has unaligned access   [ exact_rhs.c(310,12) ]
         remark #15388: vectorization support: reference ue[?-1][m] has aligned access   [ exact_rhs.c(310,29) ]
         remark #15389: vectorization support: reference ue[:][m] has unaligned access   [ exact_rhs.c(311,16) ]
         remark #15388: vectorization support: reference ue[?+1][m] has aligned access   [ exact_rhs.c(311,31) ]
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(313,9) ]
         remark #15389: vectorization support: reference forcing[k][j][i][m] has unaligned access   [ exact_rhs.c(313,31) ]
         remark #15388: vectorization support: reference ue[k-2][m] has aligned access   [ exact_rhs.c(314,12) ]
         remark #15389: vectorization support: reference ue[k-1][m] has unaligned access   [ exact_rhs.c(314,29) ]
         remark #15388: vectorization support: reference ue[k][m] has aligned access   [ exact_rhs.c(314,46) ]
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15305: vectorization support: vector length 2
         remark #15309: vectorization support: normalized vectorization overhead 0.531
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15450: unmasked unaligned unit stride loads: 4 
         remark #15451: unmasked unaligned unit stride stores: 2 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 43 
         remark #15477: vector cost: 24.500 
         remark #15478: estimated potential speedup: 1.280 
         remark #15488: --- end vector cost summary ---
         remark #25456: Number of Array Refs Scalar Replaced In Loop: 3
         remark #25015: Estimate of max trip count of loop=2
      LOOP END

      LOOP BEGIN at exact_rhs.c(307,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END

      LOOP BEGIN at exact_rhs.c(289,7)
      <Remainder loop for vectorization>
         remark #25436: completely unrolled by 1  
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at exact_rhs.c(324,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=64

   LOOP BEGIN at exact_rhs.c(325,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=65

      LOOP BEGIN at exact_rhs.c(326,7)
      <Peeled loop for vectorization>
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at exact_rhs.c(326,7)
         remark #25420: Collapsed with loop at line 327 
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference forcing[k][j][i][m] has aligned access   [ exact_rhs.c(328,11) ]
         remark #15388: vectorization support: reference forcing[k][j][i][m] has aligned access   [ exact_rhs.c(328,40) ]
         remark #15305: vectorization support: vector length 2
         remark #15399: vectorization support: unroll factor set to 2
         remark #15309: vectorization support: normalized vectorization overhead 1.250
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector cost summary ---
         remark #15476: scalar cost: 5 
         remark #15477: vector cost: 2.000 
         remark #15478: estimated potential speedup: 1.080 
         remark #15488: --- end vector cost summary ---
         remark #25015: Estimate of max trip count of loop=1

         LOOP BEGIN at exact_rhs.c(327,9)
            remark #25421: Loop eliminated in Collapsing 

         LOOP END
      LOOP END

      LOOP BEGIN at exact_rhs.c(326,7)
      <Remainder loop for vectorization>
         remark #25015: Estimate of max trip count of loop=5
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

exact_rhs.c(64,31):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(65,17):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(65,28):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(66,34):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(69,25):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(70,25):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(71,35):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(89,32):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
exact_rhs.c(160,31):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 2600 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(161,17):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(161,28):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(162,34):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(165,24):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(165,47):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(166,35):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(185,32):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
exact_rhs.c(256,31):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 169000 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(257,17):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(257,28):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(258,34):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(261,24):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(261,47):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(262,35):remark #34069: adjacent sparse (strided) loads seem unprofitable to optimize. Details: stride { 40 }, types { F64-V128, F64-V128, F64-V128, F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x00000001F }.
exact_rhs.c(281,32):remark #34055: adjacent dense (unit-strided stencil) loads are not optimized. Details: stride { 8 }, step { 8 }, types { F64-V128, F64-V128 }, number of elements { 2 }, select mask { 0x000000003 }.
exact_rhs.c(23,7):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
exact_rhs.c(23,7):remark #34026: call to memset implemented as a call to optimized library version
exact_rhs.c(7,1):remark #34051: REGISTER ALLOCATION : [exact_rhs] exact_rhs.c:7

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   31[ rax rdx rcx rbx rbp rsi rdi r8-r15 zmm0-zmm15]
        
    Routine temporaries
        Total         :    1874
            Global    :     277
            Local     :    1597
        Regenerable   :      17
        Spilled       :     143
        
    Routine stack
        Variables     :    6280 bytes*
            Reads     :     367 [1.46e+01 ~ 14.6%]
            Writes    :      21 [7.04e-01 ~ 0.7%]
        Spills        :    1696 bytes*
            Reads     :     243 [3.84e+00 ~ 3.8%]
            Writes    :     210 [1.20e+00 ~ 1.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
